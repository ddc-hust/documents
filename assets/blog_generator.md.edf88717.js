import{_ as s,c as a,o as n,a as l}from"./app.8e4af7d4.js";const C=JSON.parse('{"title":"Generator","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. \u662F\u4EC0\u4E48\uFF1F","slug":"_1-\u662F\u4EC0\u4E48\uFF1F"},{"level":2,"title":"2. \u8BED\u6CD5","slug":"_2-\u8BED\u6CD5"},{"level":2,"title":"3. \u6709\u4EC0\u4E48\u7528\uFF1F","slug":"_3-\u6709\u4EC0\u4E48\u7528\uFF1F"}],"relativePath":"blog/generator.md","lastUpdated":1686647519000}'),o={name:"blog/generator.md"},p=l(`<h1 id="generator" tabindex="-1">Generator <a class="header-anchor" href="#generator" aria-hidden="true">#</a></h1><h2 id="_1-\u662F\u4EC0\u4E48\uFF1F" tabindex="-1">1. \u662F\u4EC0\u4E48\uFF1F <a class="header-anchor" href="#_1-\u662F\u4EC0\u4E48\uFF1F" aria-hidden="true">#</a></h2><ul><li>\u751F\u6210\u5668\u51FD\u6570\uFF0C\u8FD4\u56DE\u7684\u662F\u8FED\u4EE3\u5668\u5BF9\u8C61\u3002</li><li>\u53EF\u901A\u8FC7\u8C03\u7528\u8FED\u4EE3\u5668\u5BF9\u8C61<code>iter.next\uFF08\uFF09</code>\u65B9\u6CD5\u7EE7\u7EED\u51FD\u6570\u7684\u6267\u884C\u3002\u901A\u8FC7<code>yield</code>\u5173\u952E\u5B57\u6682\u505C\u51FD\u6570\u7684\u6267\u884C</li></ul><h2 id="_2-\u8BED\u6CD5" tabindex="-1">2. \u8BED\u6CD5 <a class="header-anchor" href="#_2-\u8BED\u6CD5" aria-hidden="true">#</a></h2><ul><li>\u4F7F\u7528<code>function*</code>\u6765\u5B9A\u4E49\u751F\u6210\u5668\u51FD\u6570\uFF0C\u642D\u914Dyield\u5173\u952E\u5B57\u4F7F\u7528</li></ul><h2 id="_3-\u6709\u4EC0\u4E48\u7528\uFF1F" tabindex="-1">3. \u6709\u4EC0\u4E48\u7528\uFF1F <a class="header-anchor" href="#_3-\u6709\u4EC0\u4E48\u7528\uFF1F" aria-hidden="true">#</a></h2><ol><li>\u5B9E\u73B0\u5F02\u6B65\u7F16\u7A0B\uFF0C\u56E0\u4E3A\u53EF\u4EE5\u5F88\u597D\u7684\u63A7\u5236\u5F02\u6B65\u64CD\u4F5C\u7684\u6267\u884C\u987A\u5E8F</li></ol><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">gen</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://jsonplaceholder.typicode.com/todos/1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">title</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> iterator </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">gen</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> iterator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(data </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> iterator</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">next</span><span style="color:#A6ACCD;">(data</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">json</span><span style="color:#A6ACCD;">()))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><ol><li>\u4F5C\u4E3A\u8FED\u4EE3\u5668\uFF0C</li></ol><div class="language-js"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">gun</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> end</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">start</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">end</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">yield</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">gun </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">gun</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> gun) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,10),e=[p];function t(c,r,y,F,D,A){return n(),a("div",null,e)}var d=s(o,[["render",t]]);export{C as __pageData,d as default};
